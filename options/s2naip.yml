# General Settings
name: s2naip
model_type: SSRESRGANModel
scale: 4
num_gpu: auto
manual_seed: 0

# USM the Ground-Truth
l1_gt_usm: True
percep_gt_usm: True
gan_gt_usm: True

# Dataset and Dataloader Settings
datasets:
  train:
    name: train
    type: S2NAIPDataset

    sentinel2_path: /gpfs/data/gpfs0/park.yunseok/ssr_data/train_urban_set/sentinel2
    naip_path: /gpfs/data/gpfs0/park.yunseok/ssr_data/train_urban_set/naip

    tile_weights: /gpfs/data/gpfs0/park.yunseok/ssr_data/train_urban_set/train_tile_weights/urban_set_weights.json

    use_shuffle: False

    num_worker_per_gpu: 1
    batch_size_per_gpu: 10

    n_s2_images: 8

    s2_bands: [tci, b08]

    io_backend:
      type: disk
    
    prefetch_mode: cuda
    pin_memory: True

  val:
     name: validation
     type: S2NAIPDataset

     sentinel2_path: /gpfs/data/gpfs0/park.yunseok/ssr_data/val_set/sentinel2
     naip_path: /gpfs/data/gpfs0/park.yunseok/ssr_data/val_set/naip

     use_shuffle: False

     n_s2_images: 8

     s2_bands: [tci, b08]

     io_backend:
       type: disk

# Network Structures
network_g:
  type: SSR_RRDBNet_MAMB
  num_in_ch: 32
  num_out_ch: 3
  num_feat: 64
  num_block: 16
  num_grow_ch: 32

network_d:
#   type: SSR_UNetDiscriminatorSN
  type: PatchGAN
#   num_in_ch: 3
  num_in_ch: 3
  num_feat: 64
#   skip_connection: True

# Load in existing weights to the generator and discriminator
# Uncomment pretrain_network_g and pretrain_network_d and add paths to your weights
path:
  #pretrain_network_g:
  param_key_g: params_ema
  strict_load_g: true
  #pretrain_network_d:
  param_key_d: params
  strict_load_d: true
  resume_state: ~

# Training Settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

#   scheduler:
#     type: MultiStepLR
#     milestones: [400000]
#     gamma: 0.5

  total_iter: 200000
  warmup_iter: -1  # no warm up

  #Losses
  # L1 + MS-SSIM loss
  pixel_opt:
    type: MS_SSIM_L1
    loss_weight: !!float 1e-2
  # Perceptual Loss
  perceptual_opt:
    type: LPIPS_Loss
    loss_weight:  1.0
  # GAN Loss
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 5e-3

  net_d_iters: 1
  net_d_init_iters: 0

# Validation Settings
val:
   val_freq: !!float 5e3
   save_img: False

   metrics:
     cpsnr:
       type: calculate_cpsnr
       crop_border: 4
       test_y_channel: false
     cssim:
       type: calculate_cssim
       crop_border: 4
       test_y_channel: false

# Logging Settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 1e3 
  use_tb_logger: true
  wandb:
    project: MISR
    resume_id: ~

# Dist Training Settings
dist_params:
  backend: nccl
  port: 29500